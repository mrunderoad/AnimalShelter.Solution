// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Shelter.Models;

namespace Shelter.Migrations
{
    [DbContext(typeof(ShelterContext))]
    [Migration("20220401213925_DogPark")]
    partial class DogPark
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("Shelter.Models.Cat", b =>
                {
                    b.Property<int>("CatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Breed")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10) CHARACTER SET utf8mb4");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20) CHARACTER SET utf8mb4");

                    b.HasKey("CatId");

                    b.ToTable("Cats");

                    b.HasData(
                        new
                        {
                            CatId = 1,
                            Age = 2,
                            Breed = "Red One",
                            Gender = "Male",
                            Name = "Sr.Waffles"
                        },
                        new
                        {
                            CatId = 2,
                            Age = 5,
                            Breed = "Pink One",
                            Gender = "Male",
                            Name = "Senior Meowmeow"
                        },
                        new
                        {
                            CatId = 3,
                            Age = 12,
                            Breed = "Black Cat",
                            Gender = "Male",
                            Name = "Frank the Tank"
                        },
                        new
                        {
                            CatId = 4,
                            Age = 7,
                            Breed = "White Cat",
                            Gender = "Male",
                            Name = "Henry"
                        },
                        new
                        {
                            CatId = 5,
                            Age = 4,
                            Breed = "I dont know cat breeds",
                            Gender = "Female",
                            Name = "Cat"
                        },
                        new
                        {
                            CatId = 6,
                            Age = 5,
                            Breed = "CodeCat",
                            Gender = "Male",
                            Name = "Epicat"
                        },
                        new
                        {
                            CatId = 7,
                            Age = 100,
                            Breed = "FatCat",
                            Gender = "Male",
                            Name = "Bill"
                        },
                        new
                        {
                            CatId = 8,
                            Age = 1,
                            Breed = "KittyCat",
                            Gender = "Male",
                            Name = "Phil"
                        });
                });

            modelBuilder.Entity("Shelter.Models.Dog", b =>
                {
                    b.Property<int>("DogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Breed")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4");

                    b.Property<int>("DogParkId")
                        .HasColumnType("int");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10) CHARACTER SET utf8mb4");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20) CHARACTER SET utf8mb4");

                    b.HasKey("DogId");

                    b.HasIndex("DogParkId");

                    b.ToTable("Dogs");

                    b.HasData(
                        new
                        {
                            DogId = 1,
                            Age = 4,
                            Breed = "Hot Dog",
                            DogParkId = 0,
                            Gender = "Male",
                            Name = "Pickles"
                        },
                        new
                        {
                            DogId = 2,
                            Age = 5,
                            Breed = "Cold Dog",
                            DogParkId = 0,
                            Gender = "Male",
                            Name = "Jeremy"
                        },
                        new
                        {
                            DogId = 3,
                            Age = 10,
                            Breed = "Long Haired Pug",
                            DogParkId = 0,
                            Gender = "Male",
                            Name = "Fred"
                        },
                        new
                        {
                            DogId = 4,
                            Age = 16,
                            Breed = "Got it goin on",
                            DogParkId = 0,
                            Gender = "Mom",
                            Name = "Stacy"
                        },
                        new
                        {
                            DogId = 5,
                            Age = 4,
                            Breed = "Dog",
                            DogParkId = 0,
                            Gender = "Dog",
                            Name = "Dog"
                        },
                        new
                        {
                            DogId = 6,
                            Age = 4,
                            Breed = "Bread dog",
                            DogParkId = 0,
                            Gender = "Bread",
                            Name = "Baguette"
                        });
                });

            modelBuilder.Entity("Shelter.Models.DogPark", b =>
                {
                    b.Property<int>("DogParkId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20) CHARACTER SET utf8mb4");

                    b.HasKey("DogParkId");

                    b.ToTable("DogPark");
                });

            modelBuilder.Entity("Shelter.Models.Monkey", b =>
                {
                    b.Property<int>("MonkeyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10) CHARACTER SET utf8mb4");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20) CHARACTER SET utf8mb4");

                    b.HasKey("MonkeyId");

                    b.ToTable("Monkeys");

                    b.HasData(
                        new
                        {
                            MonkeyId = 1,
                            Age = 30,
                            Gender = "Female",
                            Name = "Koko"
                        },
                        new
                        {
                            MonkeyId = 2,
                            Age = 45,
                            Gender = "Male",
                            Name = "Bilbo Baggins"
                        },
                        new
                        {
                            MonkeyId = 3,
                            Age = 33,
                            Gender = "Male",
                            Name = "Connor McMonkey"
                        },
                        new
                        {
                            MonkeyId = 4,
                            Age = 22,
                            Gender = "Female",
                            Name = "Izzy Booboo"
                        });
                });

            modelBuilder.Entity("Shelter.Models.Dog", b =>
                {
                    b.HasOne("Shelter.Models.DogPark", "DogPark")
                        .WithMany("Dogs")
                        .HasForeignKey("DogParkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DogPark");
                });

            modelBuilder.Entity("Shelter.Models.DogPark", b =>
                {
                    b.Navigation("Dogs");
                });
#pragma warning restore 612, 618
        }
    }
}
